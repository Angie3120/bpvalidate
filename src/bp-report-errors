#!/usr/bin/perl -w

use strict;
use utf8;
use EOSN::Util qw(read_file write_file);
use JSON;
use Data::Dumper;
use Getopt::Long;

binmode(STDOUT, ":utf8");

my $infile = undef;
GetOptions('input=s' => \$infile) || exit 1;
die "$0: filename not given" if (! $infile);
my $data = from_json(read_file($infile) || die "$0: no data read");

print "Last Update: $$data{meta}{generated_at}\n";
while (<DATA>) {
	print;
}
print "\n";

foreach my $entry (@{$$data{producers}}) {
#	print Dumper ($entry);

	my $producer = $$entry{regproduce}{owner};
	foreach my $message (@{$$entry{messages}}) {
		print sprintf ("%12s: %4s: %s\n", $producer, $$message{kind}, $$message{detail});
	}
	print "\n";
}

__DATA__
Notes:
 - this list is updated approximately hourly, generated from those who ran regproduce
 - /bp.json is appended to whatever url is used in the regproduce call to get the meta data
 - /v1/chain/get_info is added to api endpoint urls within the meta data for validation
 - make sure all URLs start with http:// or https://
 - for comments/questions/concerns, contact matthew@eosnation.io or @mdarwin on telegram
 - specification: https://github.com/eosrio/bp-info-standard
 - contract: https://github.com/EOS-Mainnet/governance/blob/master/eosio.system/eosio.system-regproducer-rc.md
