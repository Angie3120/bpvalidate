#!/usr/bin/perl -w

use utf8;
use strict;
use EOSN::Report;

binmode(STDOUT, ":utf8");

# --------------------------------------------------------------------------
# Main

my $data = get_report_options ();
my $chain = chain ();
my $properties = chain_properties ($chain);
my %kinds;

foreach my $entry (@{$$data{producers}}) {
	foreach my $kind (sort keys %{$$entry{output}{nodes}}) {
		foreach my $node (@{$$entry{output}{nodes}{$kind}}) {
			my $key = $$node{node_type} || 'zzunknown';
			$kinds{$key} = 1;
		}
	}
}

foreach my $lang (languages()) {
	foreach my $content_type (content_types()) {
		my @report;
		foreach my $kind (sort keys %kinds) {
			my @section;

			foreach my $entry (@{$$data{producers}}) {
				my $producer = $$entry{regproducer}{owner};
				my $important_bp = is_important_bp ($entry);

				foreach my $node_type (sort keys %{$$entry{output}{nodes}}) {
					foreach my $node (@{$$entry{output}{nodes}{$node_type}}) {
						my $key = $$node{node_type} || 'zzunknown';
						my $orgs = whois_org ($node);
						my $countries = whois_country ($node);
						my $flags = whois_flag ($node);
						my $link = "<a href=\"$$node{address}\">$$node{address}</a>";
						next if ($key ne $kind);
						push (@section, {
							producer => $producer,
							sprintf => "%25s, %50s, %5s, %s",
							data => [$node_type, $$node{address}, $countries, $orgs],
							html_data => [undef, $link, $flags, undef]
						});
					}
				}
			}

			push (@report, {name => $kind, rows => \@section});
		}

		generate_report (chain => $chain, lang => $lang, content_type => $content_type, data => $data, report => \@report, columns => 1, outfile => "reports/node_types", text => 1, json => 1, html => 1);
	}
}
