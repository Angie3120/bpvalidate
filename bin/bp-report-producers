#!/usr/bin/perl -w

use utf8;
use strict;
use EOSN::Report;
use HTML::Entities;
use List::Util qw(shuffle);

binmode(STDOUT, ":utf8");

# ---------------------------------------------------------------------------
# Main

my $data = get_report_options ();
my @report;

foreach my $entry (@{$$data{producers}}) {
	my @section;

	my $producer = $$entry{regproducer}{owner};
	my $producer_name_html = encode_entities($$entry{info}{name} || $$entry{regproducer}{owner});
	foreach my $message (@{$$entry{messages}}) {
		push (@section, ["%4s, %11s, %s\n", $$message{kind}, $$message{class}, generate_message($message)]);
	}

	generate_report (data => $data, report => [{rows => \@section}], title => "Report for $producer_name_html", columns => 1, icons => 1, class => 2, outfile => "producers/$producer", text => 1, html => 1);
}

my @entries1;
my @entries2;
my @entries3;
foreach my $entry (shuffle (@{$$data{producers}})) {
	my $votep = $$entry{info}{vote_percent};

	my $check = 0;
	my $msgsummary = $$entry{message_summary};
	foreach my $key (qw (regproducer org endpoint)) {
		if (exists $$msgsummary{$key} && $$msgsummary{$key} eq 'ok') {
			$check++;
		}
	}

	if ($check > 0) {
		push (@entries1, $entry);
	} elsif ($votep > 0.5) {
		push (@entries2, $entry);
	} else {
		push (@entries3, $entry);
	}
}

push (@report, "<div>\n");
foreach my $entry (@entries1, @entries2, @entries3) {
	my $producer = $$entry{regproducer}{owner};
	my $rank = $$entry{info}{rank};
	my $votep = $$entry{info}{vote_percent};
	my $producer_name_html = encode_entities($$entry{info}{name} || $$entry{regproducer}{owner});
	my $country = $$entry{info}{country_alpha2};

	my $logo = $$entry{output}{resources}{social_logo_256}[0]{address} || '';
	$logo = '' if ($logo !~ m#https://#);
	if ($logo) {
		$logo = "<figure class=\"image is-24x24\"><img src=\"$logo\"></figure>\n";
	} else {
		$logo = "<figure class=\"image is-24x24\"></figure>\n";
	}
	my %results;

	my $msgsummary = $$entry{message_summary};
	foreach my $key (qw (regproducer org endpoint)) {
		my $html = sev_html($$msgsummary{$key} || 'skip', $key);
		$$msgsummary{$key} = $html;
	}

	my $selected = '';
	if ($rank <= 21) {
		$selected = sev_html('selected');
	} elsif ($votep > 0.5) {
		$selected = sev_html('standby');
	}

	my $flag = '';
	if ($country) {
		$flag = flag_html($country);
	}

	push (@report, "<div id=\"bp_$producer\" class=\"scorecard\">\n");
	push (@report, "<div>\n");
	push (@report, "  <div style=\"display: inline-block; vertical-align: middle; width: 32px\">$logo</div>\n");
	push (@report, "  <div style=\"display: inline-block; vertical-align: middle; width: 28px\">$flag</div>\n");
	push (@report, "  <div style=\"display: inline-block; vertical-align: middle; width: 32px\">$selected</div>\n");
	push (@report, "  <div style=\"display: inline-block; vertical-align: middle; width: 32px\">$$msgsummary{regproducer}</div>\n");
	push (@report, "  <div style=\"display: inline-block; vertical-align: middle; width: 32px\">$$msgsummary{org}</div>\n");
	push (@report, "  <div style=\"display: inline-block; vertical-align: middle; width: 32px\">$$msgsummary{endpoint}</div>\n");
	push (@report, "</div>\n");
	push (@report, "<div><a href=\"$producer.html\">$producer_name_html</a></div>\n");
	push (@report, "</div>\n");
}
push (@report, "</div>\n");

write_report_thtml (content => \@report, title => 'Producer Scorecard', outfile => "producers/index");
